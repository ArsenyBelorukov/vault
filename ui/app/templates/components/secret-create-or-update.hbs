{{!
  Copyright (c) HashiCorp, Inc.
  SPDX-License-Identifier: BUSL-1.1
~}}

{{#if (eq @mode "create")}}
  <form
    class={{if @showAdvancedMode "advanced-edit" "simple-edit"}}
    onsubmit={{action "createOrUpdateKey" @mode}}
    aria-label="secret create form"
  >
    <div class="field box is-fullwidth is-sideless is-marginless">
      <NamespaceReminder @mode="create" @noun="secret" />
      <MessageError @model={{@modelForData}} @errorMessage={{this.error}} />
      <label class="is-label" for="kv-key">Path for this secret</label>
      <p class="control is-expanded">
        <Input
          autocomplete="off"
          spellcheck="false"
          data-test-secret-path="true"
          id="kv-key"
          class="input {{if (get this.validationMessages 'path') 'has-error-border'}}"
          @value={{get @modelForData @modelForData.pathAttr}}
          {{on "keyup" (perform this.waitForKeyUp "path" value="target.value")}}
        />
      </p>
      {{#if (get this.validationMessages "path")}}
        <AlertInline
          @type="danger"
          @message={{get this.validationMessages "path"}}
          @paddingTop={{true}}
          @isMarginless={{true}}
        />
      {{/if}}
      {{! TODO kv engine cleanup }}
      {{#if @modelForData.isFolder}}
        <p class="help has-text-danger">
          The secret path may not end in
          <code>/</code>
        </p>
      {{/if}}
      {{#if this.pathWhiteSpaceWarning}}
        <Hds::Alert
          @type="inline"
          @color="warning"
          class="has-top-margin-m has-bottom-margin-s"
          data-test-whitespace-warning
          as |A|
        >
          <A.Title>Warning</A.Title>
          <A.Description>
            Your secret path contains whitespace. If this is desired, you'll need to encode it with %20 in API calls.
          </A.Description>
        </Hds::Alert>
      {{/if}}
    </div>
    {{#if @showAdvancedMode}}
      <JsonEditor
        @title="Secret data"
        @value={{or (stringify @model.secretData) this.emptyJson}}
        @valueUpdated={{action "codemirrorUpdated"}}
        @onFocusOut={{action "formatJSON"}}
      />
    {{else}}
      <KvObjectEditor
        class="has-top-margin-m"
        @label="Secret data"
        @value={{@model.secretData}}
        @onChange={{fn (mut @model.secretData)}}
        @isMasked={{true}}
      />
    {{/if}}
    <div class="field is-grouped box is-fullwidth is-bottomless">
      <div class="control">
        <button type="submit" disabled={{@buttonDisabled}} class="button is-primary" data-test-secret-save={{true}}>
          Save
        </button>
      </div>
      <div class="control">
        <SecretLink @mode="list" @secret={{@model.parentKey}} class="button">
          Cancel
        </SecretLink>
      </div>
    </div>
  </form>
{{/if}}

{{#if (eq @mode "edit")}}
  <form onsubmit={{action "createOrUpdateKey" "edit"}} aria-label="secret edit form">
    <div class="box is-sideless is-fullwidth is-marginless padding-top">
      <MessageError @model={{@modelForData}} @errorMessage={{this.error}} />
      <NamespaceReminder @mode="edit" @noun="secret" />
      {{#if (eq @canReadSecretData false)}}
        <Hds::Alert @type="inline" @color="warning" class="has-bottom-margin-s" as |A|>
          <A.Title>Warning</A.Title>
          <A.Description>
            {{#if (eq @canReadSecretData false)}}
              <li data-test-warning-no-read-permissions>
                You do not have read permissions. If a secret exists at this path creating a new secret will overwrite it.
              </li>
            {{/if}}
          </A.Description>
        </Hds::Alert>
      {{/if}}
      {{#if @showAdvancedMode}}
        <JsonEditor
          @title="Secret data"
          @value={{or (stringify @model.secretData) this.emptyJson}}
          @valueUpdated={{action "codemirrorUpdated"}}
          @onFocusOut={{action "formatJSON"}}
        />
      {{else}}
        <KvObjectEditor
          class="has-top-margin-m"
          @label="Secret data"
          @value={{@model.secretData}}
          @onChange={{fn (mut @model.secretData)}}
          @isMasked={{true}}
        />
      {{/if}}
    </div>
    <div class="field is-grouped is-grouped-split is-fullwidth box is-bottomless">
      <div class="field is-grouped">
        <div class="control">
          <button
            data-test-secret-save
            type="submit"
            disabled={{or @buttonDisabled this.validationErrorCount}}
            class="button is-primary"
          >
            Save
          </button>
        </div>
        <div class="control">
          <SecretLink @mode="show" @secret={{@model.id}} @queryParams={{hash version=@modelForData.version}} class="button">
            Cancel
          </SecretLink>
        </div>
      </div>
    </div>
  </form>
{{/if}}